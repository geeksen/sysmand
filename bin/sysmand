#!/usr/bin/perl

use strict;
use warnings;

use POSIX;

use lib qw(../lib); use sysmand;
use vars qw(%cfg); *cfg = \%sysmand::cfg;

&main;

sub main
{
	if (0 == &sysmand::load_cfg)
	{
		exit;
	}

	umask 022;
	chdir '/';

	close STDIN;
	close STDOUT;
	close STDERR;

	my $pid = fork;
	if ($pid) { exit; }

	setsid;
	system $cfg{'sysmand::echo'} . ' ' . $$ . ' > /var/run/sysmand.pid';

	while (1)
	{
		if (-e $cfg{'sysmand::path'} . '/script-lock/script.lock') { sleep 1; next; }

		my @scripts = &sysmand::read_dir_and_find($cfg{'sysmand::path'} . '/script-enabled/', '\.pl$');
		if (0 == scalar @scripts) { sleep 1; next; }

		system $cfg{'sysmand::cp'}  . ' /dev/null ' . $cfg{'sysmand::path'} . '/script-lock/script.lock';

		my @scripts_sorted = sort @scripts;
		foreach my $script (@scripts_sorted)
		{
			system $cfg{'sysmand::perl'} . ' ' . $cfg{'sysmand::path'} . '/script-enabled/' . $script;
			system $cfg{'sysmand::rm'} . ' -rf ' . $cfg{'sysmand::path'} . '/script-enabled/' . $script;
			sleep 1;
		}

		system $cfg{'sysmand::rm'} . ' -rf ' . $cfg{'sysmand::path'} . '/script-lock/script.lock';
		sleep 1;
	}
}
